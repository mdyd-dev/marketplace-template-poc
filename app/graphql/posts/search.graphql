query search(
  $id: ID
  $limit: Int = 20
  $parent_id: String
  $creator_id: String
  $title: String
  $body: String
  $tags: String
  $upvote_profile_ids: String
  $downvote_profile_ids: String
  $accepted_post_id: String
  $c__score: String
  $parent_id_exists: Boolean
) {
  posts: records(
    per_page: $limit
    filter: {
      id: { value: $id }
      table: { value: "post" }
      properties: [
        { name: "parent_id" value: $parent_id }
        { name: "creator_id" value: $creator_id }
        { name: "title" value: $title }
        { name: "body" value: $body }
        { name: "tags" contains: $tags }
        { name: "upvote_profile_ids" value: $upvote_profile_ids }
        { name: "downvote_profile_ids" value: $downvote_profile_ids }
        { name: "accepted_post_id" value: $accepted_post_id }
        { name: "c__score" value: $c__score }
        { name: "parent_id" exists: $parent_id_exists }
      ]
    }
    sort: [
      { created_at: { order: DESC }}
    ]
  ){
    total_entries
    results {
      id
      created_at
      type: table

      parent_id: property(name: "parent_id")
      creator_id: property(name: "creator_id")
      title: property(name: "title")
      body: property(name: "body")
      tags: property_array(name: "tags")
      upvote_profile_ids: property_array(name: "upvote_profile_ids")
      downvote_profile_ids: property_array(name: "downvote_profile_ids")
      accepted_post_id: property(name: "accepted_post_id")

      c__score: property_int(name: "c__score")
      creator: related_record(table: "profile", join_on_property: "creator_id"){
        ...profile
      }

      parent: related_records(table: "post", join_on_property: "id", foreign_property: "parent_id") {
        id
      }

      posts: related_records(table: "post", join_on_property: "id", foreign_property: "parent_id", sort: { properties: { name: "accepted_post_id", order: ASC }, created_at: { order: ASC } }) {
        id
        created_at
        type: table
        parent_id: property(name: "parent_id")
        title: property(name: "title")
        body: property(name: "body")
        upvote_profile_ids: property_array(name: "upvote_profile_ids")
        downvote_profile_ids: property_array(name: "downvote_profile_ids")
        score: property_int(name: "score")
        creator: related_record(table: "profile", join_on_property: "creator_id"){
          ...profile
        }
      }
    }
  }
}

fragment profile on Model {
  id
  name: property(name: "name")
  first_name: property(name: "first_name")
  last_name: property(name: "last_name")
  slug: property(name: "slug")
  avatar: related_record(table: "photo", join_on_property: "uuid", foreign_property: "object_uuid", filter: { properties: { name: "photo_type", value: "avatar"}}) {
    photo: property_upload(name: "photo") {
      url
      versions
    }
  }
}
