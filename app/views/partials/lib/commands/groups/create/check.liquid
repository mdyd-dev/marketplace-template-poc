{% liquid
  assign c = '{ "errors": {}, "valid": true }' | parse_json

  if object.owner_id == blank
    include 'lib/register_error', contract: c, field_name: 'owner_id', key: 'app.errors.blank'
  endif

  if object.name == blank
    include 'lib/register_error', contract: c, field_name: 'name', key: 'app.errors.blank'
  else
    graphql groups_count = 'groups/group_count', name: object.name | dig: 'groups', 'total_entries'
    if groups_count > 0
      include 'lib/register_error', contract: c, field_name: 'name', key: 'app.errors.taken'
    endif
  endif

  if object.summary == blank
    include 'lib/register_error', contract: c, field_name: 'summary', key: 'app.errors.blank'
  endif

  if object.description == blank
    include 'lib/register_error', contract: c, field_name: 'description', key: 'app.errors.blank'
  else
    if object.description.size < 30
      assign msg = 'app.errors.too_little' | t: value: 30
      include 'lib/register_error', contract: c, field_name: 'description', message: msg
    endif
  endif

  if object.uuid == blank
    include 'lib/register_error', contract: c, field_name: 'uuid', key: 'app.errors.blank'
  endif

  hash_assign object['valid'] = c.valid
  hash_assign object['errors'] = c.errors

  return object
%}
